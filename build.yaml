---
####################################################
#          ModuleBuilder Configuration             #
####################################################

CopyPaths:
  - en-US
  - Tests
  - Config
  - tasks
Encoding: UTF8
BuiltModuleSubdirectory: builtModule
VersionedOutputDirectory: true

AliasesToExport:
  - 'Task.Invoke_HQRM_Tests'
  - 'Task.Fail_Build_If_HQRM_Tests_Failed'
  - 'Task.Invoke_HQRM_Tests_Stop_On_Fail'

####################################################
#       Sampler Pipeline Configuration             #
####################################################
BuildWorkflow:
  '.':
    - build
    - test

  DscTest: |
    {
      Import-Module -force DscResource.Test
      Invoke-DscResourceTest -ExcludeTag 'Common Tests - Validate Localization'
    }

  Add_Aliases_To_Module_Manifest: |
    {
        <#
            This is quick fix for issue https://github.com/PoshCode/ModuleBuilder/issues/103.
            Aliases need to be added to module manifest, and we can only use
            New-Alias or Set-Alias together with build tasks. This module
            already automatically exports aliases using [Alias()] so this quick
            fix is meant as a workaround until the above issue is resolved.
        #>
        param
        (
            $OutputDirectory = (property OutputDirectory (Join-Path $BuildRoot 'output')),
            $ProjectName = (property ProjectName $(Get-SamplerProjectName -BuildRoot $BuildRoot)),
            $BuildInfo = (property BuildInfo @{ })
        )

        $pathToModuleManifest = Resolve-Path -Path "$OutputDirectory/builtModule/$ProjectName/**/$ProjectName.psd1"
        $existingAliases = @((Test-ModuleManifest -Path $pathToModuleManifest).ExportedAliases.Values.Name)

        "`tProject Name             = {0}" -f $ProjectName
        "`tOutput Directory         = {0}" -f $OutputDirectory
        "`tModule Manifest Path     = {0}" -f $pathToModuleManifest
        "`tAlready Exported Aliases = {0}" -f ($existingAliases -join ', ')
        "`tNew Aliases To Export    = {0}" -f ($BuildInfo.AliasesToExport -join ', ')

        Update-Metadata -Path $pathToModuleManifest -PropertyName AliasesToExport -Value ($existingAliases + $BuildInfo.AliasesToExport)
    }

  t:
    - build
    - DscTest

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Add_Aliases_To_Module_Manifest
    - Create_changelog_release_output

  pack:
    - build
    - package_module_nupkg

  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold

  merge:
    - Merge_CodeCoverage_Files

  publish:
    - publish_module_to_gallery
    - Publish_Release_To_GitHub

####################################################
#       PESTER  Configuration                      #
####################################################

Pester:
  OutputFormat: NUnitXML
  ExcludeFromCodeCoverage:
    - tasks
    - Template
    - Tests
  Script:
    - tests/QA
    - tests/Unit/
  CodeCoverageThreshold: 50
  CodeCoverageOutputFile: JaCoCo_Merge.xml # the file that is created for each pipeline test job
  CodeCoverageOutputFileEncoding: ascii
  ExcludeTag:
    - helpQuality
    - testQuality
  Tag:
  ExcludeSourceFile:
    - source/potential

CodeCoverage:
  CodeCoverageFilePattern: JaCoCo_Merge.xml # the pattern used to search all pipeline test job artifacts
  CodeCoverageMergedOutputFile: JaCoCo_coverage.xml # the file that is created for the merged code coverage

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: dscbot
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false
