---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
# SourcePath: ./Sampler/Sampler.psd1
# Output Directory where ModuleBuilder will build the Module, relative to module manifest
# OutputDirectory: ../output/Sampler
CopyPaths:
  - en-US
  - Tests
  - Config
  - tasks
Encoding: UTF8
# SemVer: '1.2.3'
# Suffix to add to Root module PSM1 after merge (here, the Set-Alias exporting IB tasks)
# suffix: suffix.ps1
VersionedOutputDirectory: true

AliasesToExport:
  - 'Task.Invoke_HQRM_Tests'
  - 'Task.Fail_Build_If_HQRM_Tests_Failed'
  - 'Task.Invoke_HQRM_Tests_Stop_On_Fail'

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

# NestedModule:
#   HelperSubmodule: # This is the first submodule to build into the output
#     Path: ./Sampler/Modules/HelperSubmodule/HelperSubmodule.psd1
#     # $ModuleVersionFolder is trimmed (remove -.*) and OutputDirectory expanded (the only one)
#     OutputDirectory: ./output/Sampler/$ModuleVersionFolder/Modules/HelperSubmodule
#     VersionedOutputDirectory: false
#     # suffix:
#     # prefix:


####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvkeBuild tasks) to be run using their alias
BuildWorkflow:
  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  DscTest: |
    {
      Import-Module -force DscResource.Test
      Invoke-DscResourceTest -ExcludeTag 'Common Tests - Validate Localization'
    }

  Add_Aliases_To_Module_Manifest: |
    {
        <#
            This is quick fix for issue https://github.com/PoshCode/ModuleBuilder/issues/103.
            Aliases need to be added to module manifest, and we can only use
            New-Alias or Set-Alias together with build tasks. This module
            already automatically exports aliases using [Alias()] so this quick
            fix is meant as a workaround until the above issue is resolved.
        #>
        param
        (
            $OutputDirectory = (property OutputDirectory (Join-Path $BuildRoot 'output')),
            $ProjectName = (property ProjectName $(Get-SamplerProjectName -BuildRoot $BuildRoot)),
            $BuildInfo = (property BuildInfo @{ })
        )

        $pathToModuleManifest = Resolve-Path -Path "$OutputDirectory/$ProjectName/**/$ProjectName.psd1"
        $existingAliases = @((Test-ModuleManifest -Path $pathToModuleManifest).ExportedAliases.Values.Name)

        "`tProject Name             = {0}" -f $ProjectName
        "`tOutput Directory         = {0}" -f $OutputDirectory
        "`tModule Manifest Path     = {0}" -f $pathToModuleManifest
        "`tAlready Exported Aliases = {0}" -f ($existingAliases -join ', ')
        "`tNew Aliases To Export    = {0}" -f ($BuildInfo.AliasesToExport -join ', ')

        Update-Metadata -Path $pathToModuleManifest -PropertyName AliasesToExport -Value ($existingAliases + $BuildInfo.AliasesToExport)
    }

  t:
    - build
    - DscTest

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Add_Aliases_To_Module_Manifest
    - Create_changelog_release_output

  pack:
    - build
    - package_module_nupkg

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold

  publish:
    - Publish_release_to_GitHub
    - publish_module_to_gallery # runs if nuget is not available


####################################################
#       PESTER  Configuration                      #
####################################################

Pester: #Passthru, OutputFile, CodeCoverageOutputFile not supported
  OutputFormat: NUnitXML
  # Will look at every *.ps1 & *.psm1 under ModulePath, excepts when $_.FullName -match (Join-Path $ProjectPath $ExcludeFromCodeCoverageItem)
  ExcludeFromCodeCoverage:
    - tasks
    - Template
    - Tests
  # Default is to use the tests folder in the project folder or source folder (if present)
  # can use it to prioritize: tests/QA, tests/Unit, tests/Integration
  Script:
    - tests/QA
    - tests/Unit/
  # - tests/Unit/Public
  # - tests/QA/module.tests.ps1
  # - tests/Integration
  ExcludeTag:
    - helpQuality
    - testQuality
  Tag:
  ExcludeSourceFile:
    - source/potential
  CodeCoverageThreshold: 50 # Set to 0 to bypass


Resolve-Dependency: #Parameters for Resolve-Dependency
  #PSDependTarget: ./output/modules
  #Proxy: ''
  #ProxyCredential:
  Gallery: 'PSGallery'
  # AllowOldPowerShellGetModule: true
  #MinimumPSDependVersion = '0.3.0'
  AllowPrerelease: false
  Verbose: false

ModuleBuildTasks:
  # - ModuleName: 'alias to search'
  Sampler:
    - '*.build.Sampler.ib.tasks' # this means: import (dot source) all aliases ending with .ib.tasks exported by sampler module

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: dscbot
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false
